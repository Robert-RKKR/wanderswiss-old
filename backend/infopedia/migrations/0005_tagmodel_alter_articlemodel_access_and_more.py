# Generated by Django 5.0.7 on 2024-08-12 13:43

import django.db.models.deletion
import uuid
import wanderswiss.base.validators.base_validator
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('infopedia', '0004_remove_articlemodel_state_articlemodel_hits_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='TagModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this object. It is automatically generated and cannot be modified.', primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(default=False, help_text='Indicates if the object is marked as deleted. Deleted objects are not removed from the database.', verbose_name='Deleted')),
                ('is_root', models.BooleanField(default=False, help_text='Indicates if the object is a root object. Root objects cannot be deleted or modified.', verbose_name='Root')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if the object is active. Inactive objects have limited functionality and may not appear in queries.', verbose_name='Active')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date and time when the object was created. This timestamp is automatically set when the object is created.', verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='The date and time when the object was last updated. This timestamp is automatically updated whenever the object is modified.', verbose_name='Updated')),
                ('name', models.CharField(error_messages={'invalid': 'Enter a valid name. It must contain 3 to 64 digits, letters, or special characters -, _ or spaces.'}, help_text='Unique name for the object. Must be between 3 and 64 characters long, and can include letters, digits, spaces, or special characters such as -, _.', max_length=64, validators=[wanderswiss.base.validators.base_validator.NameValueValidator()], verbose_name='Name')),
                ('slug', models.CharField(help_text='Unique slug representation of the object. Generated automatically from the name.', max_length=128, verbose_name='Slug')),
                ('description', models.CharField(blank=True, error_messages={'invalid': 'Enter a valid description. It must contain 8 to 256 digits, letters, and special characters -, _, . or spaces.'}, help_text='Detailed description of the object. Must be between 8 and 256 characters long and can include letters, digits, spaces, and special characters -, _, .', max_length=256, null=True, validators=[wanderswiss.base.validators.base_validator.DescriptionValueValidator()], verbose_name='Description')),
                ('ico', models.IntegerField(default=1, help_text='Graphical representation of the object. Default value is 1.', verbose_name='Object ico')),
                ('is_dynamic', models.BooleanField(default=False, help_text='Indicates if this device was dynamically created. Dynamic devices are often generated based on specific conditions or user input at runtime.', verbose_name='Is dynamic')),
                ('color', models.CharField(choices=[('aa1409', 'Dark red'), ('f44336', 'Red'), ('e91e63', 'Pink'), ('ffe4e1', 'Rose'), ('ff66ff', 'Fuchsia'), ('9c27b0', 'Purple'), ('673ab7', 'Dark purple'), ('3f51b5', 'Indigo'), ('2196f3', 'Blue'), ('03a9f4', 'Light blue'), ('00bcd4', 'Cyan'), ('009688', 'Teal'), ('00ffff', 'Aqua'), ('2f6a31', 'Dark green'), ('4caf50', 'Green'), ('8bc34a', 'Light green'), ('cddc39', 'Lime'), ('ffeb3b', 'Yellow'), ('ffc107', 'Amber'), ('ff9800', 'Orange'), ('ff5722', 'Dark orange'), ('795548', 'Brown'), ('c0c0c0', 'Light grey'), ('9e9e9e', 'Grey'), ('607d8b', 'Dark grey'), ('111111', 'Black'), ('ffffff', 'White')], default='2196f3', help_text='The color associated with this tag. This color helps in visually distinguishing tags from each other in the interface. Select from the predefined color choices available. For example, "blue" might represent information, "red" for important or critical items, and "green" for success or positive statuses.', max_length=6, verbose_name='Color')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'permissions': (('read_write', 'Read and write access.'), ('read_only', 'Read only access')),
                'default_permissions': (),
            },
        ),
        migrations.AlterField(
            model_name='articlemodel',
            name='access',
            field=models.IntegerField(default=1, help_text='Xxx.', verbose_name='Access Level'),
        ),
        migrations.AlterField(
            model_name='articlemodel',
            name='category',
            field=models.ForeignKey(blank=True, help_text='Xxx.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='infopedia.categorymodel', verbose_name='Category'),
        ),
        migrations.AlterField(
            model_name='articlemodel',
            name='content',
            field=models.TextField(help_text='Xxx.', verbose_name='Content'),
        ),
        migrations.AlterField(
            model_name='articlemodel',
            name='hits',
            field=models.IntegerField(default=0, help_text='Xxx.', verbose_name='Counted visits'),
        ),
        migrations.AlterField(
            model_name='articlemodel',
            name='language',
            field=models.CharField(choices=[('de', 'German'), ('en', 'English'), ('pl', 'Polish')], default='en', help_text='Xxx.', max_length=2, verbose_name='Language'),
        ),
        migrations.AlterField(
            model_name='articlemodel',
            name='metadata',
            field=models.JSONField(blank=True, default=dict, help_text='Xxx.', verbose_name='Metadata'),
        ),
        migrations.AlterField(
            model_name='articlemodel',
            name='published',
            field=models.DateTimeField(blank=True, help_text='Xxx.', null=True, verbose_name='Publish Down'),
        ),
        migrations.AlterField(
            model_name='articlemodel',
            name='status',
            field=models.IntegerField(choices=[(1, 'Published'), (2, 'Draft')], default=2, help_text='Xxx.', verbose_name='Status'),
        ),
    ]

# Generated by Django 5.0.7 on 2024-09-12 12:41

import uuid
import wanderswiss.base.validators.base_validator
import wanderswiss.base.validators.json_validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AchievementModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this object. It is automatically generated and cannot be modified.', primary_key=True, serialize=False)),
                ('name', models.CharField(error_messages={'invalid': 'Enter a valid name. It must contain 3 to 64 digits, letters, or special characters -, _ or spaces.'}, help_text='Unique name for the object. Must be between 3 and 64 characters long, and can include letters, digits, spaces, or special characters such as -, _.', max_length=64, validators=[wanderswiss.base.validators.base_validator.NameValueValidator()], verbose_name='Name')),
                ('slug', models.CharField(help_text='Unique slug representation of the object. Generated automatically from the name.', max_length=128, verbose_name='Slug')),
                ('description', models.CharField(blank=True, error_messages={'invalid': 'Enter a valid description. It must contain 8 to 256 digits, letters, and special characters -, _, . or spaces.'}, help_text='Detailed description of the object. Must be between 8 and 256 characters long and can include letters, digits, spaces, and special characters -, _, .', max_length=256, null=True, validators=[wanderswiss.base.validators.base_validator.DescriptionValueValidator()], verbose_name='Description')),
                ('ico', models.CharField(choices=[('fa-regular fa-user', 'Administrator'), ('bi bi-1-circle', 'Circle')], default='fa-regular fa-user', help_text='Graphical representation of the object. Default value is Administrator icon.', max_length=64, verbose_name='Object ico')),
                ('is_dynamic', models.BooleanField(default=False, help_text='Indicates if this device was dynamically created. Dynamic devices are often generated based on specific conditions or user input at runtime.', verbose_name='Is dynamic')),
                ('is_deleted', models.BooleanField(default=False, help_text='Indicates if the object is marked as deleted. Deleted objects are not removed from the database.', verbose_name='Deleted')),
                ('is_root', models.BooleanField(default=False, help_text='Indicates if the object is a root object. Root objects cannot be deleted or modified.', verbose_name='Root')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if the object is active. Inactive objects have limited functionality and may not appear in queries.', verbose_name='Active')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date and time when the object was created. This timestamp is automatically set when the object is created.', verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='The date and time when the object was last updated. This timestamp is automatically updated whenever the object is modified.', verbose_name='Updated')),
                ('points', models.IntegerField(help_text='Points awarded for this achievement.', verbose_name='Points')),
                ('conditions', models.JSONField(help_text='Xxx.', validators=[wanderswiss.base.validators.json_validators.json_list_validator], verbose_name='Conditions')),
            ],
            options={
                'verbose_name': 'Achievement',
                'verbose_name_plural': 'Achievements',
                'ordering': ['-created'],
                'permissions': (('read_write', 'Read and write access.'), ('read_only', 'Read only access')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CardModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this object. It is automatically generated and cannot be modified.', primary_key=True, serialize=False)),
                ('latitude', models.FloatField(help_text='Latitude of the location.', verbose_name='Latitude')),
                ('longitude', models.FloatField(help_text='Longitude of the location.', verbose_name='Longitude')),
                ('range', models.IntegerField(blank=True, help_text='Xxx.', null=True, verbose_name='Localization range')),
                ('name', models.CharField(error_messages={'invalid': 'Enter a valid name. It must contain 3 to 64 digits, letters, or special characters -, _ or spaces.'}, help_text='Unique name for the object. Must be between 3 and 64 characters long, and can include letters, digits, spaces, or special characters such as -, _.', max_length=64, validators=[wanderswiss.base.validators.base_validator.NameValueValidator()], verbose_name='Name')),
                ('slug', models.CharField(help_text='Unique slug representation of the object. Generated automatically from the name.', max_length=128, verbose_name='Slug')),
                ('description', models.CharField(blank=True, error_messages={'invalid': 'Enter a valid description. It must contain 8 to 256 digits, letters, and special characters -, _, . or spaces.'}, help_text='Detailed description of the object. Must be between 8 and 256 characters long and can include letters, digits, spaces, and special characters -, _, .', max_length=256, null=True, validators=[wanderswiss.base.validators.base_validator.DescriptionValueValidator()], verbose_name='Description')),
                ('ico', models.CharField(choices=[('fa-regular fa-user', 'Administrator'), ('bi bi-1-circle', 'Circle')], default='fa-regular fa-user', help_text='Graphical representation of the object. Default value is Administrator icon.', max_length=64, verbose_name='Object ico')),
                ('is_dynamic', models.BooleanField(default=False, help_text='Indicates if this device was dynamically created. Dynamic devices are often generated based on specific conditions or user input at runtime.', verbose_name='Is dynamic')),
                ('is_deleted', models.BooleanField(default=False, help_text='Indicates if the object is marked as deleted. Deleted objects are not removed from the database.', verbose_name='Deleted')),
                ('is_root', models.BooleanField(default=False, help_text='Indicates if the object is a root object. Root objects cannot be deleted or modified.', verbose_name='Root')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if the object is active. Inactive objects have limited functionality and may not appear in queries.', verbose_name='Active')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date and time when the object was created. This timestamp is automatically set when the object is created.', verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='The date and time when the object was last updated. This timestamp is automatically updated whenever the object is modified.', verbose_name='Updated')),
                ('identification_number', models.CharField(editable=False, help_text='Unique identification number in the format 0000.', max_length=4, unique=True, verbose_name='Identification Number')),
                ('altitude', models.TextField(help_text='Xxx.', verbose_name='Altitude')),
            ],
            options={
                'verbose_name': 'Card',
                'verbose_name_plural': 'Cards',
                'ordering': ['-created'],
                'permissions': (('read_write', 'Read and write access.'), ('read_only', 'Read only access')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StatisticModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this object. It is automatically generated and cannot be modified.', primary_key=True, serialize=False)),
                ('name', models.CharField(error_messages={'invalid': 'Enter a valid name. It must contain 3 to 64 digits, letters, or special characters -, _ or spaces.'}, help_text='Unique name for the object. Must be between 3 and 64 characters long, and can include letters, digits, spaces, or special characters such as -, _.', max_length=64, validators=[wanderswiss.base.validators.base_validator.NameValueValidator()], verbose_name='Name')),
                ('slug', models.CharField(help_text='Unique slug representation of the object. Generated automatically from the name.', max_length=128, verbose_name='Slug')),
                ('description', models.CharField(blank=True, error_messages={'invalid': 'Enter a valid description. It must contain 8 to 256 digits, letters, and special characters -, _, . or spaces.'}, help_text='Detailed description of the object. Must be between 8 and 256 characters long and can include letters, digits, spaces, and special characters -, _, .', max_length=256, null=True, validators=[wanderswiss.base.validators.base_validator.DescriptionValueValidator()], verbose_name='Description')),
                ('ico', models.CharField(choices=[('fa-regular fa-user', 'Administrator'), ('bi bi-1-circle', 'Circle')], default='fa-regular fa-user', help_text='Graphical representation of the object. Default value is Administrator icon.', max_length=64, verbose_name='Object ico')),
                ('is_dynamic', models.BooleanField(default=False, help_text='Indicates if this device was dynamically created. Dynamic devices are often generated based on specific conditions or user input at runtime.', verbose_name='Is dynamic')),
                ('is_deleted', models.BooleanField(default=False, help_text='Indicates if the object is marked as deleted. Deleted objects are not removed from the database.', verbose_name='Deleted')),
                ('is_root', models.BooleanField(default=False, help_text='Indicates if the object is a root object. Root objects cannot be deleted or modified.', verbose_name='Root')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if the object is active. Inactive objects have limited functionality and may not appear in queries.', verbose_name='Active')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date and time when the object was created. This timestamp is automatically set when the object is created.', verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='The date and time when the object was last updated. This timestamp is automatically updated whenever the object is modified.', verbose_name='Updated')),
                ('identification_number', models.CharField(editable=False, help_text='Unique identification number in the format 0000.', max_length=4, unique=True, verbose_name='Identification Number')),
            ],
            options={
                'verbose_name': 'Statistic',
                'verbose_name_plural': 'Statistics',
                'ordering': ['-created'],
                'permissions': (('read_write', 'Read and write access.'), ('read_only', 'Read only access')),
                'default_permissions': (),
            },
        ),
    ]

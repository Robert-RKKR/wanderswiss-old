# Generated by Django 5.0.7 on 2024-09-12 12:41

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('achievement', '0002_initial'),
        ('hiking', '0002_initial'),
        ('infopedia', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='eventmodel',
            name='creator',
            field=models.ForeignKey(blank=True, help_text='Creator responsible for the provided object. This field links to the user who created or is managing this object.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_creator', to=settings.AUTH_USER_MODEL, verbose_name='Creator'),
        ),
        migrations.AddField(
            model_name='eventmodel',
            name='regions',
            field=models.ManyToManyField(help_text='Regions through which the route passes.', limit_choices_to={'type': 6}, related_name='%(class)s_regions', to='infopedia.choicemodel', verbose_name='Regions'),
        ),
        migrations.AddField(
            model_name='multidaytrialmodel',
            name='creator',
            field=models.ForeignKey(blank=True, help_text='Creator responsible for the provided object. This field links to the user who created or is managing this object.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_creator', to=settings.AUTH_USER_MODEL, verbose_name='Creator'),
        ),
        migrations.AddField(
            model_name='multidaytrialtrialmodel',
            name='multi_day_trial',
            field=models.ForeignKey(help_text='Multi day trial that includes this trial.', on_delete=django.db.models.deletion.CASCADE, to='hiking.multidaytrialmodel', verbose_name='Multi day Trial'),
        ),
        migrations.AddField(
            model_name='routemodel',
            name='cards',
            field=models.ManyToManyField(help_text='Cards related to the route.', to='achievement.cardmodel', verbose_name='Cards'),
        ),
        migrations.AddField(
            model_name='routemodel',
            name='countries',
            field=models.ManyToManyField(help_text='Countries through which the route passes.', limit_choices_to={'type': 5}, related_name='%(class)s_countries', to='infopedia.choicemodel', verbose_name='Countries'),
        ),
        migrations.AddField(
            model_name='routemodel',
            name='creator',
            field=models.ForeignKey(blank=True, help_text='Creator responsible for the provided object. This field links to the user who created or is managing this object.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_creator', to=settings.AUTH_USER_MODEL, verbose_name='Creator'),
        ),
        migrations.AddField(
            model_name='routemodel',
            name='end_point',
            field=models.ForeignKey(help_text='Ending point of the route.', limit_choices_to={'type': 3}, on_delete=django.db.models.deletion.PROTECT, related_name='route_end_point', to='infopedia.choicemodel', verbose_name='End point'),
        ),
        migrations.AddField(
            model_name='routemodel',
            name='middle_points',
            field=models.ManyToManyField(help_text='All middle points of the route.', limit_choices_to={'type': 3}, related_name='route_middle_points', to='infopedia.choicemodel', verbose_name='Middle points'),
        ),
        migrations.AddField(
            model_name='routemodel',
            name='regions',
            field=models.ManyToManyField(help_text='Regions through which the route passes.', limit_choices_to={'type': 6}, related_name='%(class)s_regions', to='infopedia.choicemodel', verbose_name='Regions'),
        ),
        migrations.AddField(
            model_name='routemodel',
            name='route_type',
            field=models.ForeignKey(help_text='Ending point of the route.', limit_choices_to={'type': 2}, on_delete=django.db.models.deletion.PROTECT, related_name='route_route_type', to='infopedia.choicemodel', verbose_name='Route type'),
        ),
        migrations.AddField(
            model_name='routemodel',
            name='start_point',
            field=models.ForeignKey(help_text='Starting point of the route.', limit_choices_to={'type': 3}, on_delete=django.db.models.deletion.PROTECT, related_name='route_start_point', to='infopedia.choicemodel', verbose_name='Start point'),
        ),
        migrations.AddField(
            model_name='eventmodel',
            name='route',
            field=models.ForeignKey(blank=True, help_text='The route that will be taken during this event.', null=True, on_delete=django.db.models.deletion.PROTECT, to='hiking.routemodel', verbose_name='Hiking Route'),
        ),
        migrations.AddField(
            model_name='trialmodel',
            name='creator',
            field=models.ForeignKey(blank=True, help_text='Creator responsible for the provided object. This field links to the user who created or is managing this object.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_creator', to=settings.AUTH_USER_MODEL, verbose_name='Creator'),
        ),
        migrations.AddField(
            model_name='multidaytrialtrialmodel',
            name='trial',
            field=models.ForeignKey(help_text='Trial included in the multi day trial.', on_delete=django.db.models.deletion.CASCADE, to='hiking.trialmodel', verbose_name='Trial'),
        ),
        migrations.AddField(
            model_name='multidaytrialmodel',
            name='trials',
            field=models.ManyToManyField(help_text='Trials that are part of the multi day trial.', through='hiking.MultiDayTrialTrialModel', to='hiking.trialmodel', verbose_name='Trials'),
        ),
        migrations.AddField(
            model_name='trialroutemodel',
            name='route',
            field=models.ForeignKey(help_text='Route included in the trial.', on_delete=django.db.models.deletion.CASCADE, to='hiking.routemodel', verbose_name='Route'),
        ),
        migrations.AddField(
            model_name='trialroutemodel',
            name='trial',
            field=models.ForeignKey(help_text='Trial that includes this route.', on_delete=django.db.models.deletion.CASCADE, to='hiking.trialmodel', verbose_name='Trial'),
        ),
        migrations.AddField(
            model_name='trialmodel',
            name='routes',
            field=models.ManyToManyField(help_text='Routes that are part of the trial.', through='hiking.TrialRouteModel', to='hiking.routemodel', verbose_name='Routes'),
        ),
        migrations.AddField(
            model_name='usereventmodel',
            name='event',
            field=models.ForeignKey(help_text='The specific event this user is participating in. Ifthe event is deleted, this record will also be removed.', on_delete=django.db.models.deletion.CASCADE, to='hiking.eventmodel', verbose_name='Related Event'),
        ),
        migrations.AddField(
            model_name='usereventmodel',
            name='user',
            field=models.ForeignKey(help_text='The participant (user) associated with this event. If the user is deleted, this record will also be removed.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Event Participant'),
        ),
        migrations.AddField(
            model_name='eventmodel',
            name='users',
            field=models.ManyToManyField(help_text='Users who are participating in this event, through multi-day trials or individual trials linked to this event.', through='hiking.UserEventModel', to=settings.AUTH_USER_MODEL, verbose_name='Event Participants'),
        ),
    ]
